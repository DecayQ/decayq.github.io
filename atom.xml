<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Log</title>
  
  <subtitle>by DecayQ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.decay.fun/"/>
  <updated>2019-07-25T02:26:25.155Z</updated>
  <id>https://blog.decay.fun/</id>
  
  <author>
    <name>DecayQ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>QQ 小程序版『戏词』现已上线</title>
    <link href="https://blog.decay.fun/2019/07/24/introducing-xici-in-qq-mini-program/"/>
    <id>https://blog.decay.fun/2019/07/24/introducing-xici-in-qq-mini-program/</id>
    <published>2019-07-24T15:28:20.000Z</published>
    <updated>2019-07-25T02:26:25.155Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/07/24/introducing-xici-in-qq-mini-program/banner.jpg"><p><a href="https://blog.decay.fun/">上文</a>末说到『戏词』已提交审核已经是一个礼拜前的事儿了，过了一个礼拜，经过了 5 次修改，终于过审了。审了那么多次，不通过的理由，也顺便在这儿汇总一下：</p><a id="more"></a><ol><li>名称不能是通用词汇；（戏词 -&gt; 戏词丨台词字幕拼图制作器（与微信同名，说中间的丨(shu)是特殊字符再次被拒 -&gt; 戏词拼台词（成功））</li><li>不能含有微信的联系方式；（之前微信小程序版因为客服系统时效不高，所以统一换成了个人微信，移植过去 QQ 后没有做修改。取消获取入口后，成功）</li><li>页面需要含有 button[type=share] 类型的分享出口；（其实有，但在第二级页面，提醒审核人员后成功）</li></ol><p>不知道其他人会不会有这种感受：**，我在微信弄的好好的，怎么你们这儿那么多事啊，还让我改名字？做的又没微信好，审核条件还一大堆，而且感觉 QQ 小程序这边人审多于机审。比如名称中的丨，这个是汉字，音同树。在微信中如果是符号：| 页面上就会报错，提示说不合法的字符，能正常提交的一般没有什么大问题就都过了。QQ 这边已经正常提交了，然后审核再告诉你说这个是非法字符，我就很？？？？？还有一个是上面的第三点，机器跑测试的话直接就可以判断出小程序内包不包含分享的按钮组件，但是需要我提醒他们才有注意到，这说明这部分的检查还是主要靠人眼。唉，兴，开发苦，换，开发苦啊。</p><p>新平台有新平台的好，也有新平台的糟，不知道后续会怎么发展，还有，广告接入的权限不知道什么时候才可以通过。求求了，这边还有服务费要养着呢。</p><p>最后，各位可以下方的 QQ 小程序码打开体验。</p><p><img src="./xici-qq.jpg" class="nofancybox no-shadow" title="戏词QQ小程序码" alt="戏词QQ小程序码"></p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/07/24/introducing-xici-in-qq-mini-program/banner.jpg&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.decay.fun/&quot;&gt;上文&lt;/a&gt;末说到『戏词』已提交审核已经是一个礼拜前的事儿了，过了一个礼拜，经过了 5 次修改，终于过审了。审了那么多次，不通过的理由，也顺便在这儿汇总一下：&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="产品" scheme="https://blog.decay.fun/categories/%E4%BA%A7%E5%93%81/"/>
    
      <category term="戏词" scheme="https://blog.decay.fun/categories/%E4%BA%A7%E5%93%81/%E6%88%8F%E8%AF%8D/"/>
    
      <category term="项目" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="小程序" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="QQ" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/%E5%B0%8F%E7%A8%8B%E5%BA%8F/QQ/"/>
    
    
      <category term="戏词" scheme="https://blog.decay.fun/tags/%E6%88%8F%E8%AF%8D/"/>
    
      <category term="小程序" scheme="https://blog.decay.fun/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="QQ 小程序" scheme="https://blog.decay.fun/tags/QQ-%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>『戏词』将迁移到 QQ 小程序</title>
    <link href="https://blog.decay.fun/2019/07/17/migrating-xici-to-qq-mini-program/"/>
    <id>https://blog.decay.fun/2019/07/17/migrating-xici-to-qq-mini-program/</id>
    <published>2019-07-17T15:23:35.000Z</published>
    <updated>2019-07-25T02:01:16.194Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/07/17/migrating-xici-to-qq-mini-program/banner.jpg"><p>上周五的时候，我的微信小程序『戏词』收到了来自<a href="http://aldzs.com/" target="_blank" rel="noopener">阿拉丁指数</a>关于 QQ 小程序的内测邀请，虽说已经好久没用 QQ 了不知道现在上面的生态是怎么样的，但觉得新平台的话还是可以试试的，于是周末就看了下文档做了修改。</p><h2 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h2><p>改起来其实挺容易的，目录结构部分只要把后缀名 <code>.wxml</code> 改成 <code>.qml</code>、<code>.wxss</code> 改成 <code>.qss</code> 就好。QQ 小程序内用全局对象 <code>qq</code> 取代了 <code>wx</code>，<code>.qml</code> 和 <code>.js</code> 部分中含有 wx 的部分都改成 qq 即可。不过 QQ 小程序的开发者工具不提供代码编辑功能，用 vscode 全局搜一下替换调就完事。【这个不提供编辑器功能让我一开始以为自己下错安装包了，卸了一次重装发现还是这样就放弃了……</p><p>转换的过程也不算麻烦，但是好歹是自家的程序迁移，都不做个一键迁移的功能。你看看人家百度，开发工具做的那么烂还不是有个一键迁移微信小程序的功能？希望官方能重视一下。</p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="文档不全"><a href="#文档不全" class="headerlink" title="文档不全"></a>文档不全</h3><p>过程中比较糟糕的体验是分包部分。这部分官方的文档并不全，而且也只是草草的给个接口，示例代码都没有。直接从微信小程序迁移过来的<code>app.json</code>格式无法正确加载，导致我只能把『戏词』较为无关的功能删除，并对页面结构进行修改。</p><blockquote><p>刚去看了一眼，发现文档已经更新了，现在跟微信的大致相同，唉，又是修改的一天，不过也算是好事儿。<br>07-24 更新，文档是一样了，但是还是不行。</p></blockquote><h3 id="生态暂不完善"><a href="#生态暂不完善" class="headerlink" title="生态暂不完善"></a>生态暂不完善</h3><p>因为目前 QQ 小程序还处于起步阶段，生态环境还没有完全成型，很多在微信平台上的小程序并没有迁移过来，程序间跳转无法和微信保持一致——例如『戏词』内用户接受用户赞赏的“给赞”——还有很多微信上用到的第三方插件在 QQ 这里没法用，页面上调用相关组件的时候无法直接使用——比如用到的富文本显示的 wxParser。这些都需要在迁移的时候做相对应的调整。</p><h2 id="后台服务"><a href="#后台服务" class="headerlink" title="后台服务"></a>后台服务</h2><p>『戏词』的后台使用的是<a href="https://cloud.minapp.com/?invitation=ffbpqq" target="_blank" rel="noopener">知晓云</a>提供的 BaaS 服务。他们的接口提供包括微信、QQ 小程序在内的全平台 SDK，这部分的迁移并没有多少难度，只要根据他们的文档在初始化的时候配置一下就可以了。</p><h2 id="用？发电"><a href="#用？发电" class="headerlink" title="用？发电"></a>用？发电</h2><p>『戏词』目前的支出主要是后台服务的费用，收入的大部分是靠小程序内的流量主。现在在微信上的收益基本能维持基础版的运行。新增了平台入口之后，流量请求也会增加，但是 QQ 内的还没有看到对开发者比较友好的措施。从客服提供的文档中看到了，现在 QQ 小程序的流量主是需要通过自己申请才可能获得资格。希望后期能慢慢完善，毕竟靠爱发电总是不会长久。如果能匹配这部分的资格的话，我也愿意在上面投入更多的时间实现更多的功能。</p><p>『戏词』QQ 版已经提交审核，应该 1-3 天内就能知道结果。看似简单的迁移过程也是路上皆坑，不过也希望 QQ 小程序也能越做越好。</p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2019/07/17/migrating-xici-to-qq-mini-program/banner.jpg&quot;&gt;
&lt;p&gt;上周五的时候，我的微信小程序『戏词』收到了来自&lt;a href=&quot;http://aldzs.com/&quot; target=&quot;_blank&quot; r
      
    
    </summary>
    
      <category term="前端" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="产品" scheme="https://blog.decay.fun/categories/%E4%BA%A7%E5%93%81/"/>
    
      <category term="戏词" scheme="https://blog.decay.fun/categories/%E4%BA%A7%E5%93%81/%E6%88%8F%E8%AF%8D/"/>
    
      <category term="项目" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="小程序" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="QQ" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/%E5%B0%8F%E7%A8%8B%E5%BA%8F/QQ/"/>
    
    
      <category term="戏词" scheme="https://blog.decay.fun/tags/%E6%88%8F%E8%AF%8D/"/>
    
      <category term="小程序" scheme="https://blog.decay.fun/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="微信小程序" scheme="https://blog.decay.fun/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="QQ 小程序" scheme="https://blog.decay.fun/tags/QQ-%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>做了一个 LOGO</title>
    <link href="https://blog.decay.fun/2019/07/09/lighto-logo/"/>
    <id>https://blog.decay.fun/2019/07/09/lighto-logo/</id>
    <published>2019-07-09T14:27:24.000Z</published>
    <updated>2019-07-19T10:48:54.524Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/07/09/lighto-logo/lighto.jpg" title="Lighto LOGO"><p>宝贝做的是亚马逊的运营，所以之前的工具也多半是为她写的。生活中经常吐槽她们公司美工如何如何的不靠谱，图我看了，确实做得很糟糕。但是因为那个美工也算是他们公司的老员工了，老板非常地欣赏他。各种丑图在他面前都能挑出优点，仿佛看着的是自己刚出生的亲儿子。</p><p>而她负责的类目又是那个品类最好的，导致同行们纷纷模仿这“第一”……不禁感慨，这么丑还能这么吃香，这个世界真的是不以人的意志为转移的。</p><p>所以时常在想，如果是我来做这个产品的相关设计的话，我会怎么去做这样的设计呢？</p><a id="more"></a><p>要跟现在的“直接、粗犷”的风格分隔开的话，我的设想是“精致、优雅”。所以线条的粗细和字体的选择都在这方面做了调整，用更细的线条来体现“精致”，用大量的留白来表现“优雅”。因为他们的类目和“光”有关系，所以起了个“Lighto”的名字（念起来像是日语 hhh），再结合上相关的图像，这个 LOGO 也算像模像样的做出来了。因为对它还算是满意，也想到之前说的在兴隆下搭建的电商平台，一时兴起把 LOGO 放到了页面上想作为之后电商网站的效果图。但是做的匆匆忙忙，所以并没有理想中的那么成功，所以效果图就不放了。</p><p>把 LOGO 发给宝贝看后她也觉得好看哈哈哈哈（相对于之前每次都会说一下“我觉得那个还要再调整一下”），而且不小心被她们主管看到了，胡扯了是友商的 LOGO 后，主管表示“还蛮好看的”。唉，你有这眼神，怎么就看不出自家的东西哪里不对劲呢？</p><p>电商这块我还没有接触，兴趣倒是一直都有。只知道网站的搭建方法，其他的还是一无所知。尤其是跨境电商，总感觉这里面竞争十分激烈，却蕴含着更多的机会。知道学习的东西还需要很多，选品、支付、物流，每一块单独拆出来都是一个大课题。支付的话因为看到前段时间 Facebook 出的 Libra，我觉得跨境电商是个非常合适的使用场景，所以也想趁着这个机会好好学习一下这些内容。</p><p>有机会的话，独立商城见~</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/07/09/lighto-logo/lighto.jpg&quot; title=&quot;Lighto LOGO&quot;&gt;
&lt;p&gt;宝贝做的是亚马逊的运营，所以之前的工具也多半是为她写的。生活中经常吐槽她们公司美工如何如何的不靠谱，图我看了，确实做得很糟糕。但是因为那个美工也算是他们公司的老员工了，老板非常地欣赏他。各种丑图在他面前都能挑出优点，仿佛看着的是自己刚出生的亲儿子。&lt;/p&gt;
&lt;p&gt;而她负责的类目又是那个品类最好的，导致同行们纷纷模仿这“第一”……不禁感慨，这么丑还能这么吃香，这个世界真的是不以人的意志为转移的。&lt;/p&gt;
&lt;p&gt;所以时常在想，如果是我来做这个产品的相关设计的话，我会怎么去做这样的设计呢？&lt;/p&gt;
    
    </summary>
    
      <category term="杂事" scheme="https://blog.decay.fun/categories/%E6%9D%82%E4%BA%8B/"/>
    
      <category term="电商" scheme="https://blog.decay.fun/categories/%E7%94%B5%E5%95%86/"/>
    
      <category term="亚马逊" scheme="https://blog.decay.fun/categories/%E7%94%B5%E5%95%86/%E4%BA%9A%E9%A9%AC%E9%80%8A/"/>
    
      <category term="跨境电商" scheme="https://blog.decay.fun/categories/%E7%94%B5%E5%95%86/%E8%B7%A8%E5%A2%83%E7%94%B5%E5%95%86/"/>
    
    
      <category term="电商" scheme="https://blog.decay.fun/tags/%E7%94%B5%E5%95%86/"/>
    
      <category term="亚马逊" scheme="https://blog.decay.fun/tags/%E4%BA%9A%E9%A9%AC%E9%80%8A/"/>
    
      <category term="LOGO" scheme="https://blog.decay.fun/tags/LOGO/"/>
    
      <category term="想法" scheme="https://blog.decay.fun/tags/%E6%83%B3%E6%B3%95/"/>
    
      <category term="思考" scheme="https://blog.decay.fun/tags/%E6%80%9D%E8%80%83/"/>
    
      <category term="思路" scheme="https://blog.decay.fun/tags/%E6%80%9D%E8%B7%AF/"/>
    
      <category term="设计" scheme="https://blog.decay.fun/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>公众号新 LOGO</title>
    <link href="https://blog.decay.fun/2019/07/02/new-wechat-offcial-account-logo/"/>
    <id>https://blog.decay.fun/2019/07/02/new-wechat-offcial-account-logo/</id>
    <published>2019-07-02T07:31:01.000Z</published>
    <updated>2019-07-02T07:48:45.779Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/07/02/new-wechat-offcial-account-logo/logo.jpg"><p>给公众号做了一个新 LOGO，名字也换成了『DecayQ』。</p><p>微信搜索『decayq』即可。</p><p>至于啥时候会更新，我也不知道。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2019/07/02/new-wechat-offcial-account-logo/logo.jpg&quot;&gt;
&lt;p&gt;给公众号做了一个新 LOGO，名字也换成了『DecayQ』。&lt;/p&gt;
&lt;p&gt;微信搜索『decayq』即可。&lt;/p&gt;
&lt;p&gt;至于啥时候会更新，我也
      
    
    </summary>
    
      <category term="杂事" scheme="https://blog.decay.fun/categories/%E6%9D%82%E4%BA%8B/"/>
    
    
      <category term="微信" scheme="https://blog.decay.fun/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="公众号" scheme="https://blog.decay.fun/tags/%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
      <category term="LOGO" scheme="https://blog.decay.fun/tags/LOGO/"/>
    
      <category term="decayq" scheme="https://blog.decay.fun/tags/decayq/"/>
    
  </entry>
  
  <entry>
    <title>关于兴隆 CMS 的一些想法</title>
    <link href="https://blog.decay.fun/2019/06/28/some-thoughts-about-sing-long-cms/"/>
    <id>https://blog.decay.fun/2019/06/28/some-thoughts-about-sing-long-cms/</id>
    <published>2019-06-28T09:11:05.000Z</published>
    <updated>2019-07-02T07:48:45.320Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/06/28/some-thoughts-about-sing-long-cms/sing-long-cms.jpg" title="关于兴隆 CMS 的一些想法"><p>我在微博的小号里面发了条：</p><blockquote><p>接下来会在兴隆上完善一些个人练手项目，目标是是一个 CMS 和 电商网站。</p></blockquote><p>本质上，这俩除了差一个支付并没有太大的区别，而个人又绕不开支付资质的问题，虽说有个可能的解决途径但因为还没验证过，所以电商就暂缓实行了。</p><p>作为一个一毕业没多久就开始在公司做某 CMS，做外包的时候也做过几个企业站点的。这几年下来也了解了一些不足，积攒了不少经验。所以我也常常在思考：如果由我来开发一款通用型 CMS，那么我会把它想象成什么样？我在这也顺便总结一下这么一段时间以来的想法，有新内容的话会持续更新在这儿。</p><a id="more"></a><h2 id="兴隆-CMS-将会是一个基于组件开发的框架系统。"><a href="#兴隆-CMS-将会是一个基于组件开发的框架系统。" class="headerlink" title="兴隆 CMS 将会是一个基于组件开发的框架系统。"></a>兴隆 CMS 将会是一个基于组件开发的框架系统。</h2><p>设计中会有：页面设计器、组件市场、关联数据管理。</p><p>[未完成]</p><!-- ## CMS (Content Management System)内容管理系统（英语：content management system，缩写为 CMS）是指在一个合作模式下，用于管理工作流程的一套制度。该系统可应用于手工操作中，也可以应用到计算机或网络里。作为一种中央储存器（central repository），内容管理系统可将相关内容集中储存并具有群组管理、版本控制等功能。版本控制是内容管理系统的一个主要优势。[2]### 权限内容管理系统的核心在**管理**上。那么由谁来管理？自然就是管理员了。但是当所有的操作权限都集中在一个管理员手中的时候，就是一个巨大的安全隐患。所以，我们会将不同的操作独立开来，按不同的角色进行分类，最后再给用户分配对应的角色。不同的用户拥有自己的角色；不同的角色有对应着不同的操作权限。那么由管理引出了该系统子系统——用户角色权限控制系统（RBAC: Role-Based Access Control）：**用户**-**角色**-**权限**。一般来说，站点会有一个拥有所有权限的管理员。用于管理所有用户和角色。但作为一个目标是通用型 CMS，只有一个管理员来维护权限和角色似乎效率过低。我从这篇[《角色权限设计的 100 种解法》][1]中知道了：可以通过添加某个角色的子管理员，由 ta 来管理自身权限下的角色和权限，并且操作的范围不超过自身权限范围即可。### 用户界面设计界面[1]: https://mp.weixin.qq.com/s/MKljuxfDMmopr_MrnYljGw[2]: https://zh.wikipedia.org/wiki/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F -->]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/06/28/some-thoughts-about-sing-long-cms/sing-long-cms.jpg&quot; title=&quot;关于兴隆 CMS 的一些想法&quot;&gt;
&lt;p&gt;我在微博的小号里面发了条：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;接下来会在兴隆上完善一些个人练手项目，目标是是一个 CMS 和 电商网站。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本质上，这俩除了差一个支付并没有太大的区别，而个人又绕不开支付资质的问题，虽说有个可能的解决途径但因为还没验证过，所以电商就暂缓实行了。&lt;/p&gt;
&lt;p&gt;作为一个一毕业没多久就开始在公司做某 CMS，做外包的时候也做过几个企业站点的。这几年下来也了解了一些不足，积攒了不少经验。所以我也常常在思考：如果由我来开发一款通用型 CMS，那么我会把它想象成什么样？我在这也顺便总结一下这么一段时间以来的想法，有新内容的话会持续更新在这儿。&lt;/p&gt;
    
    </summary>
    
      <category term="杂事" scheme="https://blog.decay.fun/categories/%E6%9D%82%E4%BA%8B/"/>
    
      <category term="思路" scheme="https://blog.decay.fun/categories/%E6%9D%82%E4%BA%8B/%E6%80%9D%E8%B7%AF/"/>
    
    
      <category term="想法" scheme="https://blog.decay.fun/tags/%E6%83%B3%E6%B3%95/"/>
    
      <category term="思考" scheme="https://blog.decay.fun/tags/%E6%80%9D%E8%80%83/"/>
    
      <category term="思路" scheme="https://blog.decay.fun/tags/%E6%80%9D%E8%B7%AF/"/>
    
      <category term="CMS" scheme="https://blog.decay.fun/tags/CMS/"/>
    
  </entry>
  
  <entry>
    <title>做了一个亚马逊上保存买家秀中返图的工具</title>
    <link href="https://blog.decay.fun/2019/06/26/amazon-operation-tool-1/"/>
    <id>https://blog.decay.fun/2019/06/26/amazon-operation-tool-1/</id>
    <published>2019-06-26T07:16:02.000Z</published>
    <updated>2019-07-02T09:57:22.978Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/06/26/amazon-operation-tool-1/banner.jpg"><p><a href="https://blog.decay.fun/2019/06/25/new-site-called-sing-long-fun/">上文</a>提到，“高频词分析工具”是为了我那美丽可爱的女友做的。然而昨天生气的她今天好像并没有消太多的气，今天又提出了新问题。这是致命且危险的一分。</p><blockquote><p>怎样才能快速保存亚马逊页面中买家秀的图</p></blockquote><p>在给出的<code>直接右键保存/复制图片</code>操作无效、<code>通过在控制台输入选择器</code>觉得要背诵太过麻烦，这两个我最常用的方案都被否决后，我在思考还有什么更方便的方法吗？</p><a id="more"></a><p>有，肯定有，到底用哪个只不过是一个时间成本问题。</p><img src="/2019/06/26/amazon-operation-tool-1/1.jpg" title="无法保存图片"><p>最快捷的右键保存，由于点击的时候是作用到亚马逊的轮播控件而不是图片，所以无效。那么在页面上如何还能控制到页面的元素呢，我第一想法是 Chrome 的扩展插件。但因为暂时还没点这部分的技能树，所以从零开始的写的话到发送给她用我估计这一分也早已远去了。这个方案也被排除。那么我所知道的剩下的方法就只剩一个了。</p><h2 id="通过书签栏的快捷方式操控页面！"><a href="#通过书签栏的快捷方式操控页面！" class="headerlink" title="通过书签栏的快捷方式操控页面！"></a>通过书签栏的快捷方式操控页面！</h2><p>书签栏听上去就和操控页面内容风马牛不相及，那如何用它来达成我的目的呢？答案在于修改书签的地址。先随便收藏一个页面之后，右键修改网址栏为:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">javascript: (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// logic goes here</span></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><img src="/2019/06/26/amazon-operation-tool-1/2.jpg" title="修改书签"><p>这样一来，我们在页面中点击这个书签的按钮后，刚才写在网址栏中的脚本就会在当前网页执行。只要在脚本内控制好操作的逻辑，就可以实现想要的功能。为了快速解决领导的问题，简陋地写了插入打开当前图片的超链接。打开弹窗后，点击一下书签栏，按钮就会自动添加到代码中所制定的位置，点击后即可快速打开当前图片：</p><img src="/2019/06/26/amazon-operation-tool-1/3.gif" title="操作演示"><p>点击后再调节 DOM 结构的方式意味着，重新打开弹窗显示新图片后，按钮的跳转地址仍然是旧图片，需要重新点击书签才能生成新地址的按钮。虽然这步的用户体验还是差，但是能快速解决需求比什么都来的重要。</p><img src="/2019/06/26/amazon-operation-tool-1/4.jpg"><p>以上。</p><p>=========</p><p><strong>2019年7月2日 更新：</strong> 傻了，当初为啥要生成按钮再点击打开呢？获取到当前图片的地址后直接在新页面打开就可以啦😂</p><img src="/2019/06/26/amazon-operation-tool-1/5.gif"><blockquote><p>头图来自 <a href="https://unsplash.com/@helloimnik?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge" target="_blank" rel="noopener">Hello I’m Nik 🇬🇧</a> on <a href="https://unsplash.com" target="_blank" rel="noopener">Unsplash</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/06/26/amazon-operation-tool-1/banner.jpg&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.decay.fun/2019/06/25/new-site-called-sing-long-fun/&quot;&gt;上文&lt;/a&gt;提到，“高频词分析工具”是为了我那美丽可爱的女友做的。然而昨天生气的她今天好像并没有消太多的气，今天又提出了新问题。这是致命且危险的一分。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;怎样才能快速保存亚马逊页面中买家秀的图&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在给出的&lt;code&gt;直接右键保存/复制图片&lt;/code&gt;操作无效、&lt;code&gt;通过在控制台输入选择器&lt;/code&gt;觉得要背诵太过麻烦，这两个我最常用的方案都被否决后，我在思考还有什么更方便的方法吗？&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Javascript" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/Javascript/"/>
    
      <category term="工具" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="电商" scheme="https://blog.decay.fun/categories/%E7%94%B5%E5%95%86/"/>
    
      <category term="亚马逊" scheme="https://blog.decay.fun/categories/%E7%94%B5%E5%95%86/%E4%BA%9A%E9%A9%AC%E9%80%8A/"/>
    
    
      <category term="电商" scheme="https://blog.decay.fun/tags/%E7%94%B5%E5%95%86/"/>
    
      <category term="亚马逊" scheme="https://blog.decay.fun/tags/%E4%BA%9A%E9%A9%AC%E9%80%8A/"/>
    
      <category term="工具" scheme="https://blog.decay.fun/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>新站興隆，开张</title>
    <link href="https://blog.decay.fun/2019/06/25/new-site-called-sing-long-fun/"/>
    <id>https://blog.decay.fun/2019/06/25/new-site-called-sing-long-fun/</id>
    <published>2019-06-25T14:39:59.000Z</published>
    <updated>2019-06-26T08:46:05.828Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/06/25/new-site-called-sing-long-fun/sing-long-logo.jpg" title="興隆LOGO"><p>自从重新熟悉了 nginx 和服务器配置后，上线新网站成了轻而易举的事情。</p><p>这不，介绍一下我站点群（哈哈哈哈哈哈哈）今天的新成员：『<a href="http://tool.singlong.fun" target="_blank" rel="noopener">興隆工具</a>』。</p><a id="more"></a><p>去年底的时候接了外单后，由于客户域名方面的问题导致上线过程中被卡住了。所以我就有了“先注册个域名，测试或者上线前可以先临时顶替一下”的想法。想到这个域名负责的业务场景主要是用在商单上，所以名字想要“喜庆”一些（哈哈哈），于是就有了这个读音为“兴隆”，写法为“Sing Long（传唱久远）”的域名，也照着这个名字的感觉顺便做了一下 Logo。<del>可真是个全能的小天才呢哈哈哈哈。</del></p><hr><p>说到这儿刚想起来，当前这个域名 decay.fun 和 singlong.fun 这俩从单词上看两者的意思完全相反的域名，居然是差不多时间注册的，也不知道当初是怎么想的。</p><hr><p>这次上线的是一个“高频词分析”的工具。前台依旧是用 <a href="https://vue.ant.design/" target="_blank" rel="noopener">Ant Design Vue</a> 框架进行搭建（说实话我已经爱上它了，实现速度真的是快，在这里再次诚心安利），功能是统计和分析输入的段落中，英文单词的出现次数与频率。</p><p>老实说并没什么难点，思路是先把多段落合利用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STRING = STRING.split(<span class="string">"\n"</span>).join(<span class="string">" "</span>);</span><br></pre></td></tr></table></figure><p>合并成一行字符串，再通过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> result = &#123;&#125;;</span><br><span class="line">STRING.split(<span class="string">" "</span>).forEach(<span class="function"><span class="params">word</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (word.trim()) &#123;</span><br><span class="line">    word = word.toLowerCase();</span><br><span class="line">    <span class="keyword">if</span> (result[word]) &#123;</span><br><span class="line">      result[word] = ++result[word];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      result[word] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>方法，以每个单词（这边的例子没有大小写敏感）为对象的一个 key，值为该单词的出现次数，这样就可以获取输入内容的单词和次数的关系 <code>Object</code>，再之后根据自己需要转换成 <code>Array</code> 即可。</p><p>这个项目最早的客户是我美丽可爱的女票（虽然现在正在和她闹变扭）。她在做亚马逊运营的时候有些关键词要进行分析，问我有没有什么方法可以统计她收集的关键词的出现次数，我想了想挺容易的东西，就花半小时做了个最简单（陋）的版本，就发给了她：</p><img src="/2019/06/25/new-site-called-sing-long-fun/ver-1.jpg" title="高频词统计第一版"><p>前两天她说和她的同事安利了这个工具，同事都想要，她就把文件发给了他们。我想，用发文件这么原始的方式还不如我上线到线上方便，而且之后如果会出问题修改的话也好解决。所以就有了第一个版本的興隆工具。也顺便改了一下界面：</p><img src="/2019/06/25/new-site-called-sing-long-fun/ver-2.jpg" title="高频词统计第二版"><p>Feeling Better~</p><p>我对『興隆』一开始的构想是在上面实现一些跟商业有关的东西，无论是外单也好，服务、工具也罢。比如上文提到的为客户挂的网站；用 hexo 搭建这个站点后想到可以实现一套 CMS；在日常项目中做成的一些工具服务可以开放到这个域名下等等等等。当然构想不需要花费力气，罗马也不是一天就建成的，积跬步以致千里就好。</p><p>从这个工具开始，慢慢整理总结自己的一些小轮子也是一个不错的开始。希望和各位一起“興隆”，哈哈哈！</p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/06/25/new-site-called-sing-long-fun/sing-long-logo.jpg&quot; title=&quot;興隆LOGO&quot;&gt;
&lt;p&gt;自从重新熟悉了 nginx 和服务器配置后，上线新网站成了轻而易举的事情。&lt;/p&gt;
&lt;p&gt;这不，介绍一下我站点群（哈哈哈哈哈哈哈）今天的新成员：『&lt;a href=&quot;http://tool.singlong.fun&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;興隆工具&lt;/a&gt;』。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Javascript" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/Javascript/"/>
    
      <category term="工具" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Vue" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/Javascript/Vue/"/>
    
      <category term="Ant Design" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/Javascript/Vue/Ant-Design/"/>
    
      <category term="项目" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="Vue" scheme="https://blog.decay.fun/tags/Vue/"/>
    
      <category term="Ant Design" scheme="https://blog.decay.fun/tags/Ant-Design/"/>
    
      <category term="建站" scheme="https://blog.decay.fun/tags/%E5%BB%BA%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>上线了一个优惠券网站：趣优选</title>
    <link href="https://blog.decay.fun/2019/06/20/new-site-called-you-xuan-fun/"/>
    <id>https://blog.decay.fun/2019/06/20/new-site-called-you-xuan-fun/</id>
    <published>2019-06-20T08:37:59.000Z</published>
    <updated>2019-06-28T08:16:29.261Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/06/20/new-site-called-you-xuan-fun/LOGO.jpg" title="趣优选 LOGO"><p>我曾在这个网站的第一篇文章《<a href="https://blog.decay.fun/2019/03/06/Init/">Init()</a>》中就这么写道：</p><blockquote><p>…现在微博和朋友圈也发得很少，更不用说我的那个公众号了。现在居然还人模人样地弄了一个专门的博客网站，想顺上个时代的大潮好像晚的也太过分了些……可能需要考虑风格、面向的读者等等杂七杂八的琐事，想要记录零零碎碎的一些东西可能因为这些的原因，刚开热的“新建文章”页面就关了下来。</p></blockquote><p>果不其然，影响我更新的最主要因素并不是这些七七八八，而单纯只是因为我懒……得记录，干活的时候还是很愿意花时间的。这次就做了一个新网站：<a href="http://youxuan.fun?utm_source=blog_decay_fun" target="_blank" rel="noopener">趣优选</a>。</p><a id="more"></a><hr><p><a href="http://youxuan.fun?utm_source=blog_decay_fun" target="_blank" rel="noopener">趣优选</a>的所有商品数据都来自于<a href="https://www.taobao.com/" target="_blank" rel="noopener">淘宝官方</a>，我们是一个中立的、为广大网友消费者提供丰富优质优惠券的网站 😁。</p><hr><p>其实以前被这类网站的微博广告刷得心烦，当时还好奇过这类的优惠是怎么来的，但并没有深究。直到去年年底参加大学舍友的婚礼，现场和另外一个舍友聊了几句说到这个，发现他也在做而且好像做的还不错我才知道这些都是有 API 可以取的，只不过等级不同能拿到的优惠力度也不一样罢了。但是当时刚忙完『戏词』新版本的我也没想过往这方面“拓展业务”，只是提议说如果他愿意的话我可以开个广告位入驻进来，之后便不了了之了。</p><p>后来在家里跟州官说起这件事，她说之前有个账号，但是一直没怎么用。我一想，诶这机会（账号也不是什么难事……只是因为我懒）不就在身边吗？就准备自己动手做一个，但是一没经验，二没方向，只凭着一腔激动无处发泄。跟州官讨论了好久起啥名字好，最后买了个 youxuan.fun 的域名后不知道该干啥就搁置了。再次证明了那句话：</p><blockquote><p>万事起名难，然后中间难，然后后面难</p></blockquote><p>搁置之后因为和朋友有另外一个项目开工，这件事就无限期的往后推迟了。真正动手做也就 6 月 17 号那天。</p><p>因为 618 铺天盖地的广告宣传，我觉得是时候开始了解一下流程了。正好项目阶段性完成，留出了个小空挡，当做是放松自己的一种方式，我决定开始进行尝试。原本的预想是现在先了解，为之后双 11 做好准备（企业家的深谋远虑【笑，结果接口对接起来比我想象中的要容易，没想到一个小半天就搭了个大概起来。</p><p>当天晚上 11 点多，着着急急地部署了第一个版本的网站，只有搜索和领券的功能。Express 做后台 API 处理，前台用 Vue-AntD 直接搭建，快速搭建不愁人。现在完善了类目推荐，感觉像模像样，算是阶段性完工啦！（意思是可以放着不用怎么管了嘻嘻）</p><p>分销是个挺好的商业模式，可以大幅度的降低获客成本。最近微博上特别火的大 V 广告某某家的电动牙刷用的其实也是这种模式。尤其是后者，通过更精确地入口定位，更能判断出微博大 V 分别的价值，以方便下一步的营销计划（参考自：<a href="https://weibo.com/ttarticle/p/show?id=2309404368612675687376" target="_blank" rel="noopener">《没有一个大 V，逃得过电动牙刷》</a>）。我在新的项目中也加入这个思考，希望能帮助到接下来的工作。</p><p>之前有看到别人说过“自动化获客脚本”的事情，我估计下一步的计划就是了解一下这个，然后还有了解 SEO 和在双十一前的版本里加入 SSR。</p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/06/20/new-site-called-you-xuan-fun/LOGO.jpg&quot; title=&quot;趣优选 LOGO&quot;&gt;
&lt;p&gt;我曾在这个网站的第一篇文章《&lt;a href=&quot;https://blog.decay.fun/2019/03/06/Init/&quot;&gt;Init()&lt;/a&gt;》中就这么写道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;…现在微博和朋友圈也发得很少，更不用说我的那个公众号了。现在居然还人模人样地弄了一个专门的博客网站，想顺上个时代的大潮好像晚的也太过分了些……可能需要考虑风格、面向的读者等等杂七杂八的琐事，想要记录零零碎碎的一些东西可能因为这些的原因，刚开热的“新建文章”页面就关了下来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;果不其然，影响我更新的最主要因素并不是这些七七八八，而单纯只是因为我懒……得记录，干活的时候还是很愿意花时间的。这次就做了一个新网站：&lt;a href=&quot;http://youxuan.fun?utm_source=blog_decay_fun&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;趣优选&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="杂事" scheme="https://blog.decay.fun/categories/%E6%9D%82%E4%BA%8B/"/>
    
      <category term="项目" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="建站" scheme="https://blog.decay.fun/tags/%E5%BB%BA%E7%AB%99/"/>
    
      <category term="优惠券" scheme="https://blog.decay.fun/tags/%E4%BC%98%E6%83%A0%E5%88%B8/"/>
    
      <category term="趣优选" scheme="https://blog.decay.fun/tags/%E8%B6%A3%E4%BC%98%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>解决了在 Ant Design Pro Vue 中使用 vuedraggable 时的 bug</title>
    <link href="https://blog.decay.fun/2019/03/22/fixed-a-weird-bug-when-using-ant-design-pro-vue-with-vue-draggable/"/>
    <id>https://blog.decay.fun/2019/03/22/fixed-a-weird-bug-when-using-ant-design-pro-vue-with-vue-draggable/</id>
    <published>2019-03-22T01:54:51.000Z</published>
    <updated>2019-06-26T08:46:05.828Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间 clone 了 <a href="https://github.com/sendya/ant-design-pro-vue" target="_blank" rel="noopener">Ant Design Pro Vue</a> 下来试着搭一个中后台来玩玩。今天因为添加了用于拖动排序的新组件 <a href="https://github.com/SortableJS/Vue.Draggable" target="_blank" rel="noopener">Vue.Draggable</a> 后，页面中一直报错，页面也无法正常显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TypeError: window.Vue.component is not a function</span><br><span class="line">  at Module.fb15(vuedraggable.umd.min.js)</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>网上查了报错，没有相同的情况，于是就开了他们的源码看了看。</p><a id="more"></a><p>在 <code>vuedraggable/src</code> 的最后找到了这次报错的出处：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span> !== <span class="string">"undefined"</span> &amp;&amp; <span class="string">"Vue"</span> <span class="keyword">in</span> <span class="built_in">window</span>) &#123;</span><br><span class="line">  <span class="built_in">window</span>.Vue.component(<span class="string">"draggable"</span>, draggableComponent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说来奇怪，用的是 import 方式引入的 <code>vuedraggable</code> 为什么提示的 <code>window.Vue</code> 下的报错。照理说使用 <a href="https://leohxj.gitbooks.io/front-end-database/javascript-modules/about-umd.html" target="_blank" rel="noopener">UMD</a> 的话，优先判断的应该是 node 中的 export，然后是 require 最后才是 window。而且 window 下应该没有挂载 Vue 实例才对，那为什么判断的表达式为<code>true</code>了呢。</p><p>既然已经报错了，说明说 window.Vue 存在，并且是一个不同于 Vue.js 的同名对象。那么原先的 Vue 有可能不存在或者是被覆盖了。于是直接在控制台试了一下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.Vue);</span><br></pre></td></tr></table></figure><p>结果输出了一个 DOM 对象……</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">"Vue"</span> <span class="attr">stroke</span>=<span class="string">"none"</span> <span class="attr">stroke-width</span>=<span class="string">"1"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">fill-rule</span>=<span class="string">"evenodd"</span>&gt;</span>…<span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我特么……这个 <code>&lt;g&gt;</code> 是一开始提到的 <a href="https://github.com/sendya/ant-design-pro-vue" target="_blank" rel="noopener">Ant Design Pro Vue</a> 中 header 用到的 logo.svg……<a href="http://2ality.com/2012/08/ids-are-global.html" target="_blank" rel="noopener">页面元素的 id 会自动挂载到 window 对象下</a>……</p><p>有别于官方的 <a href="https://vue.ant.design" target="_blank" rel="noopener">Ant Design Vue</a> 在 header 中用到的是 src 为该 svg 的 base64 的 <code>&lt;img&gt;</code>，也有别于这个项目的<a href="https://pro.loacg.com/" target="_blank" rel="noopener">落地页</a>的 header 中直接用的一张 png，他在项目里面用到的是 svg 源文件……所以这个 <code>id=&quot;vue&quot;</code> 的元素影响了引入脚本的判断，导致报错。这个也太那啥了吧……</p><p>解决方法就是把这个 id 改成 AntVue 就解决了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间 clone 了 &lt;a href=&quot;https://github.com/sendya/ant-design-pro-vue&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ant Design Pro Vue&lt;/a&gt; 下来试着搭一个中后台来玩玩。今天因为添加了用于拖动排序的新组件 &lt;a href=&quot;https://github.com/SortableJS/Vue.Draggable&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vue.Draggable&lt;/a&gt; 后，页面中一直报错，页面也无法正常显示。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;TypeError: window.Vue.component is not a function&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at Module.fb15(vuedraggable.umd.min.js)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;网上查了报错，没有相同的情况，于是就开了他们的源码看了看。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Javascript" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/Javascript/"/>
    
      <category term="Vue" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/Javascript/Vue/"/>
    
      <category term="Ant Design" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/Javascript/Vue/Ant-Design/"/>
    
    
      <category term="Vue" scheme="https://blog.decay.fun/tags/Vue/"/>
    
      <category term="Ant Design" scheme="https://blog.decay.fun/tags/Ant-Design/"/>
    
      <category term="vuedraggable" scheme="https://blog.decay.fun/tags/vuedraggable/"/>
    
  </entry>
  
  <entry>
    <title>知晓云 Web SDK 淌坑指南</title>
    <link href="https://blog.decay.fun/2019/03/15/xici-web-with-minapp-web-sdk-beta/"/>
    <id>https://blog.decay.fun/2019/03/15/xici-web-with-minapp-web-sdk-beta/</id>
    <published>2019-03-15T09:37:12.000Z</published>
    <updated>2019-07-19T10:48:54.970Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://cloud.minapp.com/?invitation=ffbpqq" target="_blank" rel="noopener">知晓云</a>在上周推送了 Web SDK 的内测报名。因为我的小程序『戏词』的缘故，我在第一时间便提交了申请。前几天通过审核后，就赶紧地试了起来。在把『戏词』网页端的内容获取基本完成后，来说说这个 Web SDK 吧。</p><a id="more"></a><blockquote><p>这篇还是主要谈下这几天的使用体验。关于小程序『戏词』之后再写篇详细的吧，不过这里先简单提一下。</p><p>戏词是我在去年 2 月份上线的小程序，<a href="https://mp.weixin.qq.com/s/8YLGCuulafSLlJeH6FdI3Q" target="_blank" rel="noopener">起初的功能</a>只有一个，那就是能把台词的截图方便快速拼接成一张。下半年上线了<a href="https://mp.weixin.qq.com/s/-YUCrST0THjqGcsz0VuKPw" target="_blank" rel="noopener">新版本</a>，新增了任意图片添加自定义字幕的功能。并且使用知晓云 BaaS 作为数据存储，增加了『一刻』『一期』功能用于拼图分享。</p></blockquote><p>其实网页版本的『戏词』在刚上线新版本的时候就有用户在提。但是因为时间安排，只能让这个需求一直在 TODO 里面静静躺着。由于微信对个人版的小程序限制非常严格，用户没办法在小程序内做提交自定义内容的动作。而且新版本伤心后随着投稿数的增加，靠用户添加客服微信后发图，再由我整理图片上线的做法效率实在是低得惊人。所以这件事情的紧迫性也不断地提高。</p><p>在这个 Web SDK 出现之前，知晓很贴心地提供了 <a href="https://doc.minapp.com/open-api/" target="_blank" rel="noopener">Open API</a>，让开发者可以在小程序以外的程序也可以继续访问其数据库，照着官方的例子就能做好。我就搭了一套 Express 作为 API 供网页版使用。Open API 的问题是参数的设置比较麻烦，尤其是设置查询 <code>where</code> 的那里，参数名和对应的格式，最后还要 <code>JSON.stringify</code>，像我这种经常忘东忘西的，经常是出了问题再去找文档再以一比对真的是觉得人生就这么废掉了……【当然可以自己多封装一层再调用，不过因为后面听说有 Web 版的消息了，自己就没再继续封装 API 了。</p><p>Web SDK 的出现，无疑给了网页的快速开发注入了新的动力。从调用方式上到返回的数据结构都与小程序端保持一致，跨平台的友好性满分。</p><p>我的实践是封装一个用于页面调用接口的 <code>api.js</code> 文件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zhixiao <span class="keyword">from</span> <span class="string">"minapp-sdk"</span>;</span><br><span class="line">zhixiao.init(<span class="string">'clientId'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getSpecials = <span class="function">(<span class="params">size, page = <span class="number">0</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> Special = getTable(<span class="string">'special'</span>);</span><br><span class="line">  <span class="keyword">return</span> Special</span><br><span class="line">          .limit(size)</span><br><span class="line">          .offset(size * page)</span><br><span class="line">          .orderBy(<span class="string">'-created_at'</span>)</span><br><span class="line">          .find();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getSepcial = <span class="function"><span class="params">id</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> Special = getTable(<span class="string">'special'</span>);</span><br><span class="line">  <span class="keyword">return</span> Special.get(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTable</span>(<span class="params">tableName</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> table = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">switch</span>(tableName.toLowerCase())&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'special'</span>:</span><br><span class="line">    table = <span class="keyword">new</span> zhixiao.TableObject(SPECIAL_TABLE_ID);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> table;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样一来，只要在页面中引入相关的 api 方法就可以调用了：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; getSpecials &#125; <span class="keyword">from</span> <span class="string">"@/api"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    getSpecials().then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// Handle res.data.objects</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>因为知晓在 2.x 的新版本中增加了与平台无关的用户登录注册模块，所以在权限上有“匿名用户”与“登录用户”的区别。在使用 Web SDK 的时候，需要在相关应用的设置页中间打开数据表匿名读写的开关<img src="http://cdn.decay.fun/minapp-setting-sdk.png" alt="知晓云 - 设置"></p><p>之前的数据表虽然新设置了 <a href="https://doc.minapp.com/2.x/dashboard/acl.html" target="_blank" rel="noopener">ACL</a> 为“匿名用户可读，登录用户可写”的权限，但是旧数据行的 ACL 权限并没有根据数据表的 ACL 变化而变化，仍需要自己进行调整。可能是官方出于安全性的考虑吧，就我这种情况的话还是会觉得：“既然整张表格已经调整了权限，而且新录入的数据权限情况也是跟表格保持一致的，那么旧数据也应该自动更新”。这点我保持意见。（因为当时以为调完表的 ACL 后以为就都 OK 了的，调了半天还是返回 401，一开始还以为是 init 方式不对，折腾了大半天还是不行，已经冒出“我特么都自己架 API 了，用的好好的为啥还要搞这个”的念头，然后发了个工单，收起了想砸电脑的手。）</p><p>还有一点是，如果之前在小程序中已经是用过知晓的朋友应该知道，插件版的（因为我用的是插件版的，小程序 SDK 版的不清楚，不过应该都一样）知晓在每个请求的时候都会在控制台打印一句 Log。这个行为在小程序中我觉得没问题，毕竟普通用户在使用小程序的过程中是没办法开启调试的，所以有没有 Log 无所谓。但是在 Web 端不一样的是，控制台是可以被随时开启的。有太多的 Log 会导致开发者无法更合理地使用控制台，例如自己 <code>console.log</code> 的内容被一大堆 Log 推到最上面（当然只是我猜测的极端行为）。Log 在开发过程中是可以给调试带来便利，但是并不适用于生产环境中，所以我给的方案是，按 dev 下显示，在 prod 下隐藏。而且现在初始插件的 <code>init</code> 方法也可以带 <code>options</code> 了，虽然现在只提供了一个 <code>autoLogin</code>，我觉得可以再增加一个参数作为是否打印 Log 的控制:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zhixiao <span class="keyword">from</span> <span class="string">"minapp-sdk"</span>;</span><br><span class="line">zhixiao.init(<span class="string">"clientId"</span>, &#123;</span><br><span class="line">  printLog: process.env.NODE_ENV === <span class="string">"production"</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这次的 SDK 中发现了一个安全性问题，不过他们已经解决了就不提了。</p><p>最后还有一个，其实并不是问题，只是因为第一次碰到觉得挺有意思就在这儿记下来。上面提到的工单中我问了一个问题，我发现在控制台中可以看到，每次获取数据都会发起两个请求，一个 method=OPTIONS，一个 method=GET。第一个请求没有返回数据，但是返回了一串 method 的字符串：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET,POST,PUT,DELETE</span><br></pre></td></tr></table></figure><p>第二个请求才有返回我需要的数据。一开始以为是 bug 在工单里问了，客服的回答是：“这个是正常的，你可以查看这里：<a href="https://blog.csdn.net/cc1314_/article/details/78272329" target="_blank" rel="noopener">https://blog.csdn.net/cc1314_/article/details/78272329</a>”。受益匪浅。【等等，那这个请求是算套餐内的请求吗 Σ(っ °Д °;)っ</p><p>目前使用的还都是数据的获取，等做到用户注册登录、提交和更新数据的时候再来看看有没有什么新的坑吧。</p><blockquote><p>最后，再安利一波知晓云。【身为一名专业知吹</p><p>因为他们一开始的定位是微信小程序开发的 Serverless，所以从开发新版『戏词』开始就先选择了它试试。虽然戏词是一个 Side project，前后花在搭建上面的时间也只用了不到一礼拜的时间。在我熟练之后，曾花了一个周末（2 天）用他们搭建了一个类微博的小程序，可以实现微博的发送、评论、点赞、数据统计用户角色与权限（这个项目之后再考虑放出来），操作体验十分流畅便捷。这归功于他们专业的后台设计和稳定的服务质量，而且还有这太良心的定价（便宜到哭泣），是『戏词』能做到今天的关键。</p><p>如果你也有小程序想要快速上线，又苦于自己得购买域名服务器、申请备案、配置服务器数据库……那么<del>可以找我</del>点击<a href="https://cloud.minapp.com/?invitation=ffbpqq" target="_blank" rel="noopener">这里</a>注册，可以获取<code>90元</code>的体验券。3 天就能上线的小程序何苦要等上 3 个月呢？【一天 3 毛的话可以用快一年了都（嘻嘻</p></blockquote><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://cloud.minapp.com/?invitation=ffbpqq&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;知晓云&lt;/a&gt;在上周推送了 Web SDK 的内测报名。因为我的小程序『戏词』的缘故，我在第一时间便提交了申请。前几天通过审核后，就赶紧地试了起来。在把『戏词』网页端的内容获取基本完成后，来说说这个 Web SDK 吧。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Javascript" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/Javascript/"/>
    
      <category term="产品" scheme="https://blog.decay.fun/categories/%E4%BA%A7%E5%93%81/"/>
    
      <category term="戏词" scheme="https://blog.decay.fun/categories/%E4%BA%A7%E5%93%81/%E6%88%8F%E8%AF%8D/"/>
    
    
      <category term="知晓云" scheme="https://blog.decay.fun/tags/%E7%9F%A5%E6%99%93%E4%BA%91/"/>
    
      <category term="戏词" scheme="https://blog.decay.fun/tags/%E6%88%8F%E8%AF%8D/"/>
    
      <category term="SDK" scheme="https://blog.decay.fun/tags/SDK/"/>
    
  </entry>
  
  <entry>
    <title>给 Ant Design Vue 中的弹窗内的表单动态赋值的一种方法</title>
    <link href="https://blog.decay.fun/2019/03/14/ant-design-vue-dynamic-form-in-the-modal/"/>
    <id>https://blog.decay.fun/2019/03/14/ant-design-vue-dynamic-form-in-the-modal/</id>
    <published>2019-03-14T07:37:21.000Z</published>
    <updated>2019-06-26T08:46:05.827Z</updated>
    
    <content type="html"><![CDATA[<p>刚刚解决了 <a href="https://vue.ant.design/docs/vue/introduce/" target="_blank" rel="noopener">Ant Design Vue</a> 中，出现弹窗内的表单动态赋值的问题。</p><a id="more"></a><p>需求大概是这样，页面中的 Table 放置了 Key 与 Value 对应的列表。每行的右侧有个编辑按钮，点击『编辑』后弹出编辑窗口，并把该行的 Key, Value 赋值到弹窗中相对应的表单项中。</p><p>按照 Ant Design Vue 的文档写好了弹窗的结构：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a-modal</span> <span class="attr">title</span>=<span class="string">"Edit"</span> <span class="attr">:visible</span>=<span class="string">"visible"</span> <span class="attr">...</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a-form</span> <span class="attr">:form</span>=<span class="string">"form"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a-form-item</span> <span class="attr">label</span>=<span class="string">"Key"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a-input</span> <span class="attr">placeholder</span>=<span class="string">"Key name"</span> <span class="attr">required</span> <span class="attr">v-decorator</span>=<span class="string">"formConfig.key"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a-form-item</span> <span class="attr">label</span>=<span class="string">"Value"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a-input</span></span></span><br><span class="line"><span class="tag">        <span class="attr">placeholder</span>=<span class="string">"Value name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">required</span></span></span><br><span class="line"><span class="tag">        <span class="attr">v-decorator</span>=<span class="string">"formConfig.value"</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a-form-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">a-form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a-modal</span>&gt;</span></span><br></pre></td></tr></table></figure><p>与处理逻辑：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  watch: &#123;</span><br><span class="line">    visible(isShow) &#123;</span><br><span class="line">      <span class="keyword">if</span> (isShow) &#123;</span><br><span class="line">        <span class="keyword">this</span>.form.setFieldsValue(&#123;</span><br><span class="line">          [<span class="string">"key"</span>]: <span class="keyword">this</span>.key,</span><br><span class="line">          [<span class="string">"value"</span>]: <span class="keyword">this</span>.value</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是每次点击按钮后弹出窗口后，相对应的值并没有设置进表单中，而且控制台报了这个错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: You cannot set a form field before rendering a field associated with the value.</span><br></pre></td></tr></table></figure><p>查看 DOM 树后发现，当 visible 第一次为 <code>true</code> 时，&lt;a-modal&gt; 运用单例模式被渲染为 body 的最后一个子元素。所以怀疑是在 form 还没被渲染的时候，就已经调用了 <code>setFieldsValue</code> 的方法。【有别于 React 版的 Ant-Design，其 Modal 提供了 <code>forceRender</code> 参数可供强制渲染。】</p><p>所以把方法调整为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">watch:&#123;</span><br><span class="line">  visible(isShow) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isShow) &#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">this</span>.isRendered)&#123;</span><br><span class="line">        <span class="keyword">this</span>.setValue(<span class="keyword">this</span>.key, <span class="keyword">this</span>.value);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.isRendered = <span class="literal">true</span>;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">          <span class="keyword">this</span>.setValue(<span class="keyword">this</span>.key, <span class="keyword">this</span>.value);</span><br><span class="line">        &#125;,<span class="number">100</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">methods:&#123;</span><br><span class="line">  setValue(k,v)&#123;</span><br><span class="line">    <span class="keyword">this</span>.form.setFieldsValue(&#123;</span><br><span class="line">      [<span class="string">"key"</span>]: k,</span><br><span class="line">      [<span class="string">"value"</span>]: v</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样一来，通过使用 <code>setTimeout</code> 的方式转化为异步赋值。其中这个 100ms 的时间差是一开始为了验证“是不是由于渲染时序的原因导致的无法赋值”的问题。验证通过后，发现去掉时间也是可以的。至于 <code>setTimeout(fn, 0)</code> 之所以有效，先放两篇链接。</p><ol><li><a href="https://www.quora.com/What-does-setTimeout-with-a-0ms-delay-do-Is-this-some-trick-to-spawn-a-new-thread-but-why" target="_blank" rel="noopener">What does setTimeout with a 0ms delay do? Is this some trick to spawn a new thread, but why?</a></li><li><a href="https://stackoverflow.com/questions/779379/why-is-settimeoutfn-0-sometimes-useful" target="_blank" rel="noopener">Why is setTimeout(fn, 0) sometimes useful?</a></li></ol><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚刚解决了 &lt;a href=&quot;https://vue.ant.design/docs/vue/introduce/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ant Design Vue&lt;/a&gt; 中，出现弹窗内的表单动态赋值的问题。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Javascript" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/Javascript/"/>
    
      <category term="Vue" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/Javascript/Vue/"/>
    
      <category term="Ant Design" scheme="https://blog.decay.fun/categories/%E5%89%8D%E7%AB%AF/Javascript/Vue/Ant-Design/"/>
    
    
      <category term="Vue" scheme="https://blog.decay.fun/tags/Vue/"/>
    
      <category term="Ant Design" scheme="https://blog.decay.fun/tags/Ant-Design/"/>
    
  </entry>
  
  <entry>
    <title>《小岛经济学》</title>
    <link href="https://blog.decay.fun/2019/03/07/How-an-economy-grows-and-why-it-crashes/"/>
    <id>https://blog.decay.fun/2019/03/07/How-an-economy-grows-and-why-it-crashes/</id>
    <published>2019-03-07T14:57:32.000Z</published>
    <updated>2019-06-26T07:28:44.020Z</updated>
    
    <content type="html"><![CDATA[<p>上周某个晚班回家的公交上，听到订阅的一位 Youtube 博主推荐了这本《小岛经济学》，因为在他的简述中提到了作者是奥派经济学的粉丝，就顺手<a href="https://u.jd.com/EWgycD" target="_blank" rel="noopener">京东下单</a>买了下来。第二天就送到了，周末花了半天时间就看完了。有痛快的地方，也有不痛快的，就一起记在这里。</p><a id="more"></a><blockquote><p>链接中的标题是这本《小岛经济学》的英文名：<em>How an Economy Grows and Why It Crashes</em>。</p></blockquote><p>这本书的作者其实是 <code>Peter D. Schiff</code> 与 <code>Andrew J. Schiff</code> 两人。书的开始，原始人打渔的故事，是来源于他们小时候，信奉奥派经济学的父亲为了让他们更好的理解经济学而创作的比喻。</p><p>奥地利经济学派与凯恩斯经济学派在经济学中是两个对立的学派。前者主张市场的自由开放，回归个人需求；后者推崇政府统一管控，避免经济大起大落。就我自己粗略的理解，前者属于右派，后者属于左派。</p><p>因为觉得自身立场偏向于市场派，我在微博关注过很多市场派的经济学者或爱好者，不仅因为有着相同的信仰（这个词好像有点大了），还因为可以在他们那可以获得不同的观察方式和理解角度。但是现在的我所了解到的，除了市场与政府的博弈在经济上的博弈之外，并没有太多的延伸。所以，当博主介绍到作者是奥派的时候，抱着试图能在书中获知其他人的解读的希望，就毫不犹豫地下了单。</p><p>故事是作者兄弟二人顺着父亲的比喻继续完善的作品。以原始人每天需要打渔开始，一步步地介绍了创业、投资、银行业、服务业、政府、金融风暴等等是如何诞生的。我发现之前觉得深奥的经济学的原理也能如此生动地表达出来，而且纠正或是说思考了之前理解存在的一些偏差，只用了大半天就看完了全书。</p><p>于是记下来一些点：</p><blockquote><ul><li>储蓄不只是提高个人消费能力的手段，还是防止经济受到意外因素影响的重要缓冲器</li><li>储蓄创造资本，而资本使生产扩大成为可能</li><li>起经济增长决定作用的是生产而不是消费</li><li>经济的目的是提高生产力，而非创造就业</li><li>通货膨胀 ≠ 物价上涨</li><li>通货紧缩与通货膨胀可以同时发生</li></ul></blockquote><p>当然，全书也有觉得不大过瘾的地方。虽是在架空的世界进行比喻，开始的发展都是作者独家的设定，有种从零开始建设新世界时高速发展的爽快感。但是越到了后期，与现实的重合度不断提升，读起来就有一种停止了手中建造这座“乌托邦”的进程，开始了与反派进行斗争而停滞不前。心中诸如“既然书中说政府的权利需要公民主动放弃一部分的自由，那么在前者不断扩张的前提下，奥派是否有可以解决的思路或者是方案”等等问题并没有解答，而是照着现实继续虚构。还有一点是，本书的用意是提醒美国政府重视实体行业，所以书中虚构了许多现实中美联邦银行高层这类人物，虽然翻译时用的名称是其现实中的名称谐音，但由于我不熟悉，所以那几章看得也是糊里糊涂的。</p><p>我觉得，一切的问题归根到底都是经济问题。不知道奥派除了对经济之外，对法律、政治等等其他的有没有相对应的理论。我很好奇。</p><p>最后，留一个京东的购买链接：<a href="https://u.jd.com/EWgycD" target="_blank" rel="noopener">https://u.jd.com/EWgycD</a></p><p><img src="http://cdn.decay.fun/xiao-dao-jing-ji-xue.jpg" alt="小岛经济学"></p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上周某个晚班回家的公交上，听到订阅的一位 Youtube 博主推荐了这本《小岛经济学》，因为在他的简述中提到了作者是奥派经济学的粉丝，就顺手&lt;a href=&quot;https://u.jd.com/EWgycD&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;京东下单&lt;/a&gt;买了下来。第二天就送到了，周末花了半天时间就看完了。有痛快的地方，也有不痛快的，就一起记在这里。&lt;/p&gt;
    
    </summary>
    
      <category term="书单" scheme="https://blog.decay.fun/categories/%E4%B9%A6%E5%8D%95/"/>
    
      <category term="读书笔记" scheme="https://blog.decay.fun/categories/%E4%B9%A6%E5%8D%95/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="阅读" scheme="https://blog.decay.fun/tags/%E9%98%85%E8%AF%BB/"/>
    
      <category term="笔记" scheme="https://blog.decay.fun/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="奥派" scheme="https://blog.decay.fun/tags/%E5%A5%A5%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>Init()</title>
    <link href="https://blog.decay.fun/2019/03/06/Init/"/>
    <id>https://blog.decay.fun/2019/03/06/Init/</id>
    <published>2019-03-06T08:22:38.000Z</published>
    <updated>2019-03-15T09:25:10.435Z</updated>
    
    <content type="html"><![CDATA[<p>其实准确来说应该是昨天下午的差不多这个时间搭建好了这个站点。照理说身为一个前端，自己的网站不是自己做的好像很说不过去。</p><p>哈哈哈哈。</p><a id="more"></a><p>不过倒是现学了 hexo ，照着理解顺便改了配置文件，还从一堆模板里面选了觉得适合文字站点还改了一些样式，倒是不用一俩小时就架了起来，内心在一定程度上安慰了自己。不过现在微博和朋友圈也发得很少，更不用说我的那个公众号了。现在居然还人模人样地弄了一个专门的博客网站，想顺上个时代的大潮好像晚的也太过分了些。</p><p>弄这个网站，起因主要是因为想写一些记录项目过程的文章：公众号太需要花时间在排版上（可见我不合格的前端基本素养）还可能需要考虑风格、面向的读者等等杂七杂八的琐事，想要记录零零碎碎的一些东西可能因为这些的原因，刚开热的“新建文章”页面就关了下来。</p><p>在这边我想记录些开发过程中的思路或者是日常，可能像记流水账样的东西。精力还是需要集中在内容，而不是在哪个载体上，否则又重蹈了上述的覆辙，所以选择工具生成而不是从头开始写。网站开发这块我想还是不要占用太多时间，等之后完工了，再慢慢调优不急。</p><p>前几天看到说，现在用搜索引擎搜到的内容还不如一个大型 app 能搜到自己站点的内容多（可能有偏差），联想到几年前看到的文章（准确地说是三年前，刚凭着记忆去找，还真找到了）<a href="https://zhuanlan.zhihu.com/p/22561084" target="_blank" rel="noopener">《Web 在继续离我们远去》</a>中，引用过<a href="https://blog.yitianshijie.net/2016/04/13/wechat-against-world-wide-web?utm_source=decayq_github_io" target="_blank" rel="noopener">《微信并不是在「管理」外部链接，因为微信公众号在事实上（de facto）不允许任何外部链接》</a>中的描述：</p><blockquote><p>中文世界一直混淆互联网（internet）和万维网（web）。人们念兹在兹的「互联网开放精神」，实乃万维网的开放精神。万维网的开放主要就体现在一点：任何万维网上的文章之间都可以通过网址随意互相链接。如果我想在文章里介绍 UbuWeb 这个网站，我就可以直接在 UbuWeb 这六个字母上添加它的网址 ubu.com。妳或许觉得这是废话，但在微信公众号的文章里妳做不到；妳只能添加微信生态圈内的链接，比如这个：<a href="https://weixin.qq.com/cgi-bin/readtemplate?t=weixin_external_links_content_management_specification" target="_blank" rel="noopener">https://weixin.qq.com/cgi-bin/readtemplate?t=weixin_external_links_content_management_specification</a> （即上述《规范》的链接）</p></blockquote><p>我的第一个网站，或者说只是一个小网页，是我在小学毕业的时候做的。当时用的还是父亲的笔记本，用 FrontPage 拖拽 <code>&lt;table&gt;</code> 而成的第一个页面。当时做的就是一个给我们家里面的成员用的导航页面。上面放了每个成员的常用网站入口，当时对 <code>超链接</code> 的命名还印象深刻。互联网——准确地说是万维网——的魅力我想，从那个时候开始就略有体会。希望从这个小博客出发，好好的作为 Open 和 Decentralized 的一员吧。</p><p>那么以上，就是这个博客的初始化了:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> decayq_github_io = <span class="keyword">new</span> Hexo(&#123;</span><br><span class="line">  title: <span class="string">'Log'</span>,</span><br><span class="line">  subtitle: <span class="string">'by DecayQ'</span>,</span><br><span class="line">  lang: <span class="string">'zh-CN'</span>,</span><br><span class="line">  theme: <span class="string">'maupassant'</span>,</span><br><span class="line">  alias: <span class="string">'blog.decay.fun'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">decayq_github_io.init();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &gt; Welcome to World Wide Web</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实准确来说应该是昨天下午的差不多这个时间搭建好了这个站点。照理说身为一个前端，自己的网站不是自己做的好像很说不过去。&lt;/p&gt;
&lt;p&gt;哈哈哈哈。&lt;/p&gt;
    
    </summary>
    
      <category term="杂事" scheme="https://blog.decay.fun/categories/%E6%9D%82%E4%BA%8B/"/>
    
    
      <category term="hexo" scheme="https://blog.decay.fun/tags/hexo/"/>
    
      <category term="博客" scheme="https://blog.decay.fun/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="互联网" scheme="https://blog.decay.fun/tags/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
</feed>
